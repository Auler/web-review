<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.review.www.dao.AssessmentresultsMapper" >
  <resultMap id="BaseResultMap" type="com.review.www.entity.Assessmentresults" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="score" property="score" jdbcType="VARCHAR" />
    <result column="backup_one" property="backupOne" jdbcType="VARCHAR" />
    <result column="backup_two" property="backupTwo" jdbcType="VARCHAR" />
    <result column="backup_three" property="backupThree" jdbcType="VARCHAR" />
    <result column="comment_id" property="commentId" jdbcType="CHAR" />
    <result column="rules_id" property="rulesId" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, score, backup_one, backup_two, backup_three, comment_id, rules_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from AssessmentResults
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from AssessmentResults
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.review.www.entity.Assessmentresults" >
    insert into AssessmentResults (id, score, backup_one, 
      backup_two, backup_three, comment_id, 
      rules_id)
    values (#{id,jdbcType=CHAR}, #{score,jdbcType=VARCHAR}, #{backupOne,jdbcType=VARCHAR}, 
      #{backupTwo,jdbcType=VARCHAR}, #{backupThree,jdbcType=VARCHAR}, #{commentId,jdbcType=CHAR}, 
      #{rulesId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.review.www.entity.Assessmentresults" >
    insert into AssessmentResults
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="backupOne != null" >
        backup_one,
      </if>
      <if test="backupTwo != null" >
        backup_two,
      </if>
      <if test="backupThree != null" >
        backup_three,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="rulesId != null" >
        rules_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="backupOne != null" >
        #{backupOne,jdbcType=VARCHAR},
      </if>
      <if test="backupTwo != null" >
        #{backupTwo,jdbcType=VARCHAR},
      </if>
      <if test="backupThree != null" >
        #{backupThree,jdbcType=VARCHAR},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=CHAR},
      </if>
      <if test="rulesId != null" >
        #{rulesId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.review.www.entity.Assessmentresults" >
    update AssessmentResults
    <set >
      <if test="score != null" >
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="backupOne != null" >
        backup_one = #{backupOne,jdbcType=VARCHAR},
      </if>
      <if test="backupTwo != null" >
        backup_two = #{backupTwo,jdbcType=VARCHAR},
      </if>
      <if test="backupThree != null" >
        backup_three = #{backupThree,jdbcType=VARCHAR},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=CHAR},
      </if>
      <if test="rulesId != null" >
        rules_id = #{rulesId,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.review.www.entity.Assessmentresults" >
    update AssessmentResults
    set score = #{score,jdbcType=VARCHAR},
      backup_one = #{backupOne,jdbcType=VARCHAR},
      backup_two = #{backupTwo,jdbcType=VARCHAR},
      backup_three = #{backupThree,jdbcType=VARCHAR},
      comment_id = #{commentId,jdbcType=CHAR},
      rules_id = #{rulesId,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>