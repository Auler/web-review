<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.review.www.dao.ExpertMapper" >
  <resultMap id="BaseResultMap" type="com.review.www.entity.Expert" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="post" property="post" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="CHAR" />
    <result column="backup_one" property="backupOne" jdbcType="VARCHAR" />
    <result column="backup_two" property="backupTwo" jdbcType="VARCHAR" />
    <result column="backup_three" property="backupThree" jdbcType="VARCHAR" />
    <result column="title_id" property="titleId" jdbcType="CHAR" />
    <result column="degree_id" property="degreeId" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, password, email, post, school, creation_time, creator, backup_one, backup_two, 
    backup_three, title_id, degree_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from expert
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from expert
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.review.www.entity.Expert" >
    insert into expert (id, name, password, 
      email, post, school, 
      creation_time, creator, backup_one, 
      backup_two, backup_three, title_id, 
      degree_id)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{post,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{creator,jdbcType=CHAR}, #{backupOne,jdbcType=VARCHAR}, 
      #{backupTwo,jdbcType=VARCHAR}, #{backupThree,jdbcType=VARCHAR}, #{titleId,jdbcType=CHAR}, 
      #{degreeId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.review.www.entity.Expert" >
    insert into expert
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="post != null" >
        post,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="backupOne != null" >
        backup_one,
      </if>
      <if test="backupTwo != null" >
        backup_two,
      </if>
      <if test="backupThree != null" >
        backup_three,
      </if>
      <if test="titleId != null" >
        title_id,
      </if>
      <if test="degreeId != null" >
        degree_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="post != null" >
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=CHAR},
      </if>
      <if test="backupOne != null" >
        #{backupOne,jdbcType=VARCHAR},
      </if>
      <if test="backupTwo != null" >
        #{backupTwo,jdbcType=VARCHAR},
      </if>
      <if test="backupThree != null" >
        #{backupThree,jdbcType=VARCHAR},
      </if>
      <if test="titleId != null" >
        #{titleId,jdbcType=CHAR},
      </if>
      <if test="degreeId != null" >
        #{degreeId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.review.www.entity.Expert" >
    update expert
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="post != null" >
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=CHAR},
      </if>
      <if test="backupOne != null" >
        backup_one = #{backupOne,jdbcType=VARCHAR},
      </if>
      <if test="backupTwo != null" >
        backup_two = #{backupTwo,jdbcType=VARCHAR},
      </if>
      <if test="backupThree != null" >
        backup_three = #{backupThree,jdbcType=VARCHAR},
      </if>
      <if test="titleId != null" >
        title_id = #{titleId,jdbcType=CHAR},
      </if>
      <if test="degreeId != null" >
        degree_id = #{degreeId,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.review.www.entity.Expert" >
    update expert
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      post = #{post,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=CHAR},
      backup_one = #{backupOne,jdbcType=VARCHAR},
      backup_two = #{backupTwo,jdbcType=VARCHAR},
      backup_three = #{backupThree,jdbcType=VARCHAR},
      title_id = #{titleId,jdbcType=CHAR},
      degree_id = #{degreeId,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>