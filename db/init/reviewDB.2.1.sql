-- MySQL Script generated by MySQL Workbench
-- Thu May  5 20:50:26 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema reviewDB
-- -----------------------------------------------------
-- 评审系统数据库
DROP SCHEMA IF EXISTS `reviewDB` ;

-- -----------------------------------------------------
-- Schema reviewDB
--
-- 评审系统数据库
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `reviewDB` DEFAULT CHARACTER SET utf8 ;
USE `reviewDB` ;

-- -----------------------------------------------------
-- Table `reviewDB`.`base_constant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`base_constant` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`base_constant` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `key` VARCHAR(45) NOT NULL COMMENT '',
  `number` VARCHAR(45) NOT NULL COMMENT '',
  `name` VARCHAR(45) NOT NULL COMMENT '',
  `remark` VARCHAR(450) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = '学位';


-- -----------------------------------------------------
-- Table `reviewDB`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`user` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`user` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `department` CHAR(32) NOT NULL COMMENT '',
  `degree` CHAR(32) NOT NULL COMMENT '',
  `title` CHAR(32) NOT NULL COMMENT '',
  `eduction` CHAR(32) NOT NULL COMMENT '',
  `number` VARCHAR(45) NULL COMMENT '教工号',
  `avatar` VARCHAR(450) NULL COMMENT '头像',
  `name` VARCHAR(45) NULL COMMENT '姓名',
  `sex` TINYINT(1) NULL COMMENT '性别',
  `type` TINYINT(4) NULL COMMENT '类型:1-user 2-admin; 3-root; 4-projectPerson',
  `password` VARCHAR(450) NULL COMMENT '密码',
  `phone` VARCHAR(45) NULL COMMENT '手机号',
  `email` VARCHAR(45) NULL COMMENT '邮箱地址',
  `birthday` VARCHAR(45) NULL COMMENT '用户',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '备用',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_user_degree1_idx` (`degree` ASC)  COMMENT '',
  CONSTRAINT `fk_user_degree1`
    FOREIGN KEY (`degree`)
    REFERENCES `reviewDB`.`base_constant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '用户';


-- -----------------------------------------------------
-- Table `reviewDB`.`expert`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`expert` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`expert` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `title` CHAR(32) NOT NULL COMMENT '',
  `degree` CHAR(32) NOT NULL COMMENT '',
  `avatar` VARCHAR(450) NULL COMMENT '',
  `number` VARCHAR(45) NULL COMMENT '',
  `phone` VARCHAR(45) NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `password` VARCHAR(45) NULL COMMENT '',
  `email` VARCHAR(45) NULL COMMENT '',
  `post` VARCHAR(45) NULL COMMENT '职务',
  `school` VARCHAR(45) NULL COMMENT '学校',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_expert_degree1_idx` (`degree` ASC)  COMMENT '',
  CONSTRAINT `fk_expert_degree1`
    FOREIGN KEY (`degree`)
    REFERENCES `reviewDB`.`base_constant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '专家';


-- -----------------------------------------------------
-- Table `reviewDB`.`class_one`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`class_one` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`class_one` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `remark` VARCHAR(450) NULL COMMENT '',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '项目大类',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = '项目大类';


-- -----------------------------------------------------
-- Table `reviewDB`.`class_two`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`class_two` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`class_two` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `class_one_id` CHAR(32) NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `remark` VARCHAR(450) NULL COMMENT '',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `id_UNIQUE` (`id` ASC)  COMMENT '',
  INDEX `fk_classTwo_classOne_idx` (`class_one_id` ASC)  COMMENT '',
  CONSTRAINT `fk_classTwo_classOne`
    FOREIGN KEY (`class_one_id`)
    REFERENCES `reviewDB`.`class_one` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '项目子类';


-- -----------------------------------------------------
-- Table `reviewDB`.`review_program`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`review_program` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`review_program` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `type` TINYINT(4) NULL COMMENT '',
  `class_name` VARCHAR(45) NULL COMMENT '类名（方法名）',
  `url` VARCHAR(450) NULL COMMENT '界面地址',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `careator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = '评审方案';


-- -----------------------------------------------------
-- Table `reviewDB`.`class_three`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`class_three` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`class_three` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `class_one_id` CHAR(32) NOT NULL COMMENT '',
  `class_two_id` CHAR(32) NOT NULL COMMENT '',
  `reviewProgram_id` CHAR(32) NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `remark` VARCHAR(450) NULL COMMENT '',
  `start_time` DATETIME NULL COMMENT '开始时间',
  `end_time` DATETIME NULL COMMENT '结束时间',
  `status` TINYINT(4) NULL COMMENT '',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_classThree_classTwo1_idx` (`class_two_id` ASC)  COMMENT '',
  INDEX `fk_classThree_reviewprogram1_idx` (`reviewProgram_id` ASC)  COMMENT '',
  INDEX `fk_class_three_class_one1_idx` (`class_one_id` ASC)  COMMENT '',
  CONSTRAINT `fk_classThree_classTwo1`
    FOREIGN KEY (`class_two_id`)
    REFERENCES `reviewDB`.`class_two` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_classThree_reviewprogram1`
    FOREIGN KEY (`reviewProgram_id`)
    REFERENCES `reviewDB`.`review_program` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_class_three_class_one1`
    FOREIGN KEY (`class_one_id`)
    REFERENCES `reviewDB`.`class_one` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '项目表';


-- -----------------------------------------------------
-- Table `reviewDB`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`project` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`project` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `class_three_id` CHAR(32) NOT NULL COMMENT '',
  `review_program_id` CHAR(32) NOT NULL COMMENT '',
  `user_id` CHAR(32) NOT NULL COMMENT '用户id',
  `subject_category` CHAR(32) NOT NULL COMMENT '',
  `discipline_category` CHAR(32) NOT NULL COMMENT '学科门类',
  `name` VARCHAR(45) NULL COMMENT '',
  `status` TINYINT(4) NULL COMMENT '状态',
  `topic_base` VARCHAR(1000) NULL COMMENT '选题依据',
  `research` VARCHAR(2000) NULL COMMENT '研究内容',
  `funds` VARCHAR(45) NULL COMMENT '经费',
  `file` VARCHAR(450) NULL COMMENT '文件',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  `backup_four` VARCHAR(45) NULL COMMENT '',
  `backup_five` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_project_classThree1_idx` (`class_three_id` ASC)  COMMENT '',
  INDEX `fk_project_user1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_project_review_program1_idx` (`review_program_id` ASC)  COMMENT '',
  INDEX `fk_project_base_constant1_idx` (`subject_category` ASC)  COMMENT '',
  CONSTRAINT `fk_project_classThree1`
    FOREIGN KEY (`class_three_id`)
    REFERENCES `reviewDB`.`class_three` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `reviewDB`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_review_program1`
    FOREIGN KEY (`review_program_id`)
    REFERENCES `reviewDB`.`review_program` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_base_constant1`
    FOREIGN KEY (`subject_category`)
    REFERENCES `reviewDB`.`base_constant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '项目流水表';


-- -----------------------------------------------------
-- Table `reviewDB`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`comment` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`comment` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `project_id` CHAR(32) NOT NULL COMMENT '',
  `expert_id` CHAR(32) NOT NULL COMMENT '',
  `content` VARCHAR(45) NULL COMMENT '',
  `class` VARCHAR(45) NULL COMMENT '',
  `score` VARCHAR(45) NULL COMMENT '分数',
  `sort` VARCHAR(45) NULL COMMENT '排序',
  `is_pass` VARCHAR(45) NULL COMMENT '通过与否',
  `comment_time` DATETIME NULL COMMENT '评审时间',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_comment_project1_idx` (`project_id` ASC)  COMMENT '',
  INDEX `fk_comment_expert1_idx` (`expert_id` ASC)  COMMENT '',
  CONSTRAINT `fk_comment_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `reviewDB`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_expert1`
    FOREIGN KEY (`expert_id`)
    REFERENCES `reviewDB`.`expert` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '评审结果';


-- -----------------------------------------------------
-- Table `reviewDB`.`rules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`rules` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`rules` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  `details` VARCHAR(1000) NULL COMMENT '细则详情',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = '评审细则';


-- -----------------------------------------------------
-- Table `reviewDB`.`review_program_rules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`review_program_rules` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`review_program_rules` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `review_program_id` CHAR(32) NOT NULL COMMENT '',
  `rules_id` CHAR(32) NOT NULL COMMENT '',
  `percentage` VARCHAR(45) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_review_program_rules_rules1_idx` (`rules_id` ASC)  COMMENT '',
  INDEX `fk_review_program_rules_review_program1_idx` (`review_program_id` ASC)  COMMENT '',
  CONSTRAINT `fk_review_program_rules_rules1`
    FOREIGN KEY (`rules_id`)
    REFERENCES `reviewDB`.`rules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_program_rules_review_program1`
    FOREIGN KEY (`review_program_id`)
    REFERENCES `reviewDB`.`review_program` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reviewDB`.`assessment_result`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`assessment_result` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`assessment_result` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `comment_id` CHAR(32) NOT NULL COMMENT '',
  `review_program_rules_id` CHAR(32) NOT NULL COMMENT '',
  `score` VARCHAR(45) NULL COMMENT '得分',
  `remark` VARCHAR(450) NULL COMMENT '备注',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_AssessmentResults_comment1_idx` (`comment_id` ASC)  COMMENT '',
  INDEX `fk_AssessmentResults_review_program_rules1_idx` (`review_program_rules_id` ASC)  COMMENT '',
  CONSTRAINT `fk_AssessmentResults_comment1`
    FOREIGN KEY (`comment_id`)
    REFERENCES `reviewDB`.`comment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_AssessmentResults_review_program_rules1`
    FOREIGN KEY (`review_program_rules_id`)
    REFERENCES `reviewDB`.`review_program_rules` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '评分细则结果表';


-- -----------------------------------------------------
-- Table `reviewDB`.`announcement`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`announcement` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`announcement` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `class_three_id` CHAR(32) NOT NULL COMMENT '',
  `title` VARCHAR(45) NULL COMMENT '',
  `content` VARCHAR(1000) NULL COMMENT '内容',
  `start_time` DATETIME NULL COMMENT '',
  `end_time` DATETIME NULL COMMENT '',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  `backup_one` VARCHAR(45) NULL COMMENT '',
  `backup_two` VARCHAR(45) NULL COMMENT '',
  `backup_three` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_announcement_class_three1_idx` (`class_three_id` ASC)  COMMENT '',
  CONSTRAINT `fk_announcement_class_three1`
    FOREIGN KEY (`class_three_id`)
    REFERENCES `reviewDB`.`class_three` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '公告';


-- -----------------------------------------------------
-- Table `reviewDB`.`project_member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`project_member` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`project_member` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `project_id` CHAR(32) NOT NULL COMMENT '',
  `user_id` CHAR(32) NOT NULL COMMENT '',
  `remark` VARCHAR(450) NULL COMMENT '备注',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` CHAR(32) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_project_member_project1_idx` (`project_id` ASC)  COMMENT '',
  INDEX `fk_project_member_user1_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_project_member_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `reviewDB`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_project_member_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `reviewDB`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `reviewDB`.`file`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `reviewDB`.`file` ;

CREATE TABLE IF NOT EXISTS `reviewDB`.`file` (
  `id` CHAR(32) NOT NULL COMMENT '',
  `project_id` CHAR(32) NOT NULL COMMENT '',
  `file_address` VARCHAR(450) NULL COMMENT '',
  `is_deleted` TINYINT(1) NULL COMMENT '',
  `creator` VARCHAR(45) NULL COMMENT '',
  `creation_time` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_file_project1_idx` (`project_id` ASC)  COMMENT '',
  CONSTRAINT `fk_file_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `reviewDB`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `reviewDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `reviewDB`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `reviewDB`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `reviewDB`.`view1`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `reviewDB`.`view1` ;
DROP TABLE IF EXISTS `reviewDB`.`view1`;
USE `reviewDB`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
